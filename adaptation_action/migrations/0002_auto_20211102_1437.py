# Generated by Django 3.2 on 2021-11-02 14:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('mitigation_action', '0017_auto_20210831_0331'),
        ('adaptation_action', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Classifier',
                'verbose_name_plural': 'Classifiers',
            },
        ),
        migrations.CreateModel(
            name='FinanceInstrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Finance Instrument',
                'verbose_name_plural': 'Finance Instruments',
            },
        ),
        migrations.CreateModel(
            name='FinanceSourceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Finance Source Type',
                'verbose_name_plural': 'Finance Source Types',
            },
        ),
        migrations.CreateModel(
            name='FinanceStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Finance Status',
                'verbose_name_plural': 'Finance Status',
            },
        ),
        migrations.CreateModel(
            name='InformationSourceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, null=True)),
                ('code', models.CharField(max_length=500, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Information Source Type',
                'verbose_name_plural': 'Information Source Types',
            },
        ),
        migrations.CreateModel(
            name='Mideplan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registry', models.CharField(max_length=2, null=True)),
                ('name', models.CharField(max_length=300, null=True)),
                ('entity', models.CharField(max_length=200, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Mideplan',
                'verbose_name_plural': 'Mideplan',
            },
        ),
        migrations.CreateModel(
            name='ThematicCategorizationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Thematic Categorization Type',
                'verbose_name_plural': 'Thematic Categorization Types',
            },
        ),
        migrations.CreateModel(
            name='InformationSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsible_institution', models.CharField(max_length=500, null=True)),
                ('other_type', models.CharField(max_length=500, null=True)),
                ('statistical_operation', models.CharField(max_length=500, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('type_information', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='information_source', to='adaptation_action.informationsourcetype')),
            ],
            options={
                'verbose_name': 'Information Source',
                'verbose_name_plural': 'Information Sources',
            },
        ),
        migrations.CreateModel(
            name='IndicatorAdaptation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(null=True)),
                ('unit', models.CharField(max_length=255, null=True)),
                ('methodological_detail', models.TextField(null=True)),
                ('reporting_periodicity', models.CharField(choices=[('YEARLY', 'Yearly'), ('BIANNUAL', 'Biannual'), ('QUARTERLY', 'Quartely')], default='YEARLY', max_length=50, null=True)),
                ('available_time_start_date', models.DateField(null=True)),
                ('available_time_end_date', models.DateField(null=True)),
                ('geographic_coverage', models.CharField(choices=[('NATIONAL', 'National'), ('REGIONAL', 'Regional'), ('PROVINCIAL', 'Provincial'), ('CANTONAL', 'Cantonal'), ('OTHER', 'Other')], default='NATIONAL', max_length=255, null=True)),
                ('other_geographic_coverage', models.CharField(blank=True, max_length=255, null=True)),
                ('disaggregation', models.TextField(null=True)),
                ('limitation', models.TextField(null=True)),
                ('additional_information', models.TextField(null=True)),
                ('comments', models.TextField(null=True)),
                ('other_type_of_data', models.CharField(blank=True, max_length=255, null=True)),
                ('other_classifier', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('classifier', models.ManyToManyField(blank=True, related_name='indicator_adaptation', to='adaptation_action.Classifier')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='indicator_adaptation', to='mitigation_action.contact')),
                ('information_source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='indicator_adaptation', to='adaptation_action.informationsource')),
                ('type_of_data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='indicator_adaptation', to='adaptation_action.thematiccategorizationtype')),
            ],
            options={
                'verbose_name': 'Indicator Adaptation',
                'verbose_name_plural': 'Indicator Adaptation',
            },
        ),
        migrations.CreateModel(
            name='FinanceAdaptation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('administration', models.TextField(max_length=500, null=True)),
                ('budget', models.DecimalField(decimal_places=5, max_digits=20, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('finance_instrument', models.ManyToManyField(blank=True, related_name='finance_adaptation', to='adaptation_action.FinanceInstrument')),
                ('mideplan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='finance_adaptation', to='adaptation_action.mideplan')),
                ('source', models.ManyToManyField(blank=True, related_name='finance_adaptation', to='adaptation_action.FinanceSourceType')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='finance_adaptation', to='adaptation_action.financestatus')),
            ],
            options={
                'verbose_name': 'Finance Adaptation',
                'verbose_name_plural': 'Finance Adaptations',
            },
        ),
        migrations.AddField(
            model_name='adaptationaction',
            name='finance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='adaptation_action', to='adaptation_action.financeadaptation'),
        ),
        migrations.AddField(
            model_name='adaptationaction',
            name='indicator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='adaptation_action', to='adaptation_action.indicatoradaptation'),
        ),
    ]
